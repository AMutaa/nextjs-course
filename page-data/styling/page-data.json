{"componentChunkName":"component---src-templates-lesson-template-js","path":"/styling","result":{"data":{"markdownRemark":{"html":"<p>Next.js comes with some styling conventions baked in, and they're pretty good. Because Next.js uses React, you can also use any other mechanism that works with React to style your apps.</p>\n<blockquote>\n<p>üëçüèæ¬†¬†<strong>tip</strong> You might have to extend Next.js tp support your styling approach. More on that later.</p>\n</blockquote>\n<p>When it comes to styling, you have global styles and component styles. For global CSS, you have to import them at the entry point of your app. Wait, where is the entrance to my Next.js app? It's actually created for you, but you can and have to create your own now that you want global styles.</p>\n<p>Create an <code class=\"language-text\">pages/_app.jsx</code> file and add this:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> pageProps <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">pageProps</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This automatically gets created for you by default with the same code. In the <code class=\"language-text\">_app.jsx</code> you can import any CSS file, and the styles will be global now.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token string\">'flexbox.css'</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'../mystyles.css'</span></code></pre></div>\n<p>Now, when you don't want global CSS, Next.js supports <a href=\"https://github.com/css-modules/css-modules\">css modules</a>. This will scope your CSS, avoiding collisions.</p>\n<blockquote>\n<p>üï≥ ¬†¬†<strong>deep dive</strong>: a unique class name is created every import to reuse the same CSS class names</p>\n</blockquote>\n<p>You can import a CSS module file anywhere in your app. To create a CSS module, you have to use a special syntax in the file name.</p>\n<p><code class=\"language-text\">styles.module.css</code></p>\n<p>This makes CSS modules a perfect solution to styling components.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">components\n  button.jsx\n  button.module.css</code></pre></div>\n<blockquote>\n<p>üëçüèæ ¬†¬†<strong>tip</strong> You can use a CSS pre-processor by extending Next.js. We'll cover that later.</p>\n</blockquote>\n<p>I prefer to use a different solution when styling all my React apps, which we're going to use today. </p>","frontmatter":{"path":"/styling","title":"Styling","order":"4A","section":"CSS and Styling","description":"Learn Next.js with Scott Moss and Frontend Masters"}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"6B","path":"/api-handlers","title":"API Handlers"}}},{"node":{"frontmatter":{"order":"6A","path":"/api","title":"API Routes"}}},{"node":{"frontmatter":{"order":"5A","path":"/config","title":"Customizing Next.js config"}}},{"node":{"frontmatter":{"order":"9A","path":"/deployment","title":"Deployment"}}},{"node":{"frontmatter":{"order":"7A","path":"/fetching-data","title":"Fetching Data"}}},{"node":{"frontmatter":{"order":"10A","path":"/final","title":"Final Thoughts"}}},{"node":{"frontmatter":{"order":"2C","path":"/getting-starterd","title":"Getting Started"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"3B","path":"/navigation","title":"Navigation"}}},{"node":{"frontmatter":{"order":"1B","path":"/overview","title":"Course Overview"}}},{"node":{"frontmatter":{"order":"3A","path":"/pages","title":"Routing with Pages"}}},{"node":{"frontmatter":{"order":"5B","path":"/plugins","title":"Plugins"}}},{"node":{"frontmatter":{"order":"7B","path":"/rendering-modes","title":"Rendering Modes"}}},{"node":{"frontmatter":{"order":"1C","path":"/setup","title":"Setup"}}},{"node":{"frontmatter":{"order":"8A","path":"/working-with-ssr","title":"Working with SSR"}}},{"node":{"frontmatter":{"order":"4A","path":"/styling","title":"Styling"}}},{"node":{"frontmatter":{"order":"4B","path":"/themeui","title":"Theme UI"}}},{"node":{"frontmatter":{"order":"2B","path":"/what-is-nextjs","title":"What is Next.js"}}},{"node":{"frontmatter":{"order":"2A","path":"/what-youll-learn","title":"What you'll learn"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}